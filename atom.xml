<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[BiBiHub]]></title>
  <subtitle><![CDATA[BiBiHub]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.bibihub.com/"/>
  <updated>2016-01-28T08:26:59.000Z</updated>
  <id>http://www.bibihub.com/</id>
  
  <author>
    <name><![CDATA[张晓亮]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[如何在Linux(centos7)下搭建一个VPN服务器]]></title>
    <link href="http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/"/>
    <id>http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/</id>
    <published>2016-01-27T07:29:24.000Z</published>
    <updated>2016-01-28T08:26:59.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>&emsp;&emsp;作为一个程序猿，在工作中经常会遇到各种各样的”灵异事件”。你要清楚一件事，你遇到的问题有99.99%的可能，别人同样遇到过，而且已经有了很多解决方案，现在你需要的做的，仅仅是找到它。俗话说”内事问baidu，外事问google”，程序上的事还是让我们去问google比较靠谱。<br>&emsp;&emsp;本教程出介绍了如何利用VULTR的VPS搭建一个基于PPTP协议的VPN服务器，来访问像google这样被和谐掉的网站。</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/">如何在Linux(centos7)下搭建一个VPN服务器</a></cite></footer></blockquote>
<a id="more"></a>
<hr>
<h2 id="u6D77_u5916VPS"><a href="#u6D77_u5916VPS" class="headerlink" title="海外VPS"></a>海外VPS</h2><hr>
<p>本教程用的VPS是<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>，<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>一开始就上架了SSD VPS，vultr.com域名于2008年注册，2013年9月易主。<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>公司办公室位于美国纽约，是一个远程办公的团队。<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>主要卖点是：SSD硬盘、超低价格、全球14个机房、10Gb服务器带宽、3GHz CPU、性能优异。</p>
<p><a href="https://www.vultr.com/?ref=6868760" target="_blank" rel="external"><img src="https://www.vultr.com/media/728x90_03.gif" width="728" height="90"></a></p>
<p><a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>的VPS申请十分简单，上面是我的邀请链接(感谢你通过用我的邀请链接进行注册)，输入一个有效的邮箱，填写密码，提交即可，注册成功后，可以拿到$5的体验金(可以免费用一个月)</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fcreate-a-free-account.png" alt=""></p>
<p>注册成功后，需要进行邮箱验证，这里需要注意一下，<mark>在进行绑定支付渠道的时候，不要用Gift Codes，因为体验金是有使用期限的，有效期限是1个月，等我们试用快到期的时候，在去用Gift Codes。</mark>这样可以延长免费使用的时间。Gift Codes 的使用方法很简单，在Billing界面，点击Gift Code，输入进去点Apply就可以了</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fgift-code.png" alt=""></p>
<p>这里分享三个Gift Codes <strong><code>SSDVPS</code></strong> <strong><code>OWNCLOUD</code></strong> <strong><code>TGIF15</code></strong></p>
<hr>
<h2 id="u90E8_u7F72VPS"><a href="#u90E8_u7F72VPS" class="headerlink" title="部署VPS"></a>部署VPS</h2><hr>
<p>在<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>的控制台上面，切换到Deploy下，首先选择服务器的类型，这里面选<code>COMPUTE INSTANCES</code><br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-1.png" alt=""><br>选择机房，这里建议选Tokyo,Japan，毕竟那块离我们天朝近，网络相对稳定<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-2.png" alt=""><br>操作系统选CentOS7 64bit，如果你选择其它操作系统，之后的操作你可能会遇到一些麻烦<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-3.png" alt=""><br>服务器的配置，这里选择最便宜的就好啦，1CPU，768M内存，1T流量，这个配置十分适合搭建VPN<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-4.png" alt=""><br>给服务器起个响亮的名字，提交订单<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-5.png" alt=""><br>订单提交成功后，在My Servers面板下面，会看到服务器正在初始化的菊花，耐心等待一会<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-6.png" alt=""><br>OK，服务器状态变成Running了，点击Manage按钮来管理刚才创建的服务器<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-7.png" alt=""><br>这里有我们服务器的IP地址，与root用户的密码，到这里我们的VPS就部署成功了<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-8.png" alt=""></p>
<hr>
<h2 id="u90E8_u7F72VPN"><a href="#u90E8_u7F72VPN" class="headerlink" title="部署VPN"></a>部署VPN</h2><hr>
<p>在确定服务器已经启动后，我们利用SSH客户端登录到服务器，由于我用的是Mac，直接用Terminal就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="number">45.32</span>.<span class="number">43.250</span></span><br><span class="line">The authenticity of host <span class="string">'45.32.43.250 (45.32.43.250)'</span> can<span class="string">'t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:veASoYogUfkkw7jMMAN3kuUCPKJgy80LNSxoJy4lgno.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added '</span><span class="number">45.32</span>.<span class="number">43.250</span><span class="string">' (ECDSA) to the list of known hosts.</span><br><span class="line">root@45.32.43.250'</span>s password:</span><br><span class="line">Last login: Mon Dec  <span class="number">7</span> <span class="number">23</span>:<span class="number">42</span>:<span class="number">31</span> <span class="number">2015</span> from <span class="number">10.0</span>.<span class="number">2.2</span></span><br><span class="line">[root@vultr ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>安装需要用的包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pptpd iptables</span><br></pre></td></tr></table></figure></p>
<p>配置PPTP的设置。首先配置<code>/etc/ppp/options.pptpd</code>文件，找到网络和路由设置，我们设置ms-dns为<strong><code>8.8.8.8</code></strong>和<strong><code>8.8.4.4</code></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Network and Routing</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If pppd is acting as a server for Microsoft Windows clients, this</span></span><br><span class="line"><span class="comment"># option allows pppd to supply one or two DNS (Domain Name Server)</span></span><br><span class="line"><span class="comment"># addresses to the clients.  The first instance of this option</span></span><br><span class="line"><span class="comment"># specifies the primary DNS address; the second instance (if given)</span></span><br><span class="line"><span class="comment"># specifies the secondary DNS address.</span></span><br><span class="line"><span class="comment">#ms-dns 10.0.0.1</span></span><br><span class="line"><span class="comment">#ms-dns 10.0.0.2</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">4.4</span></span><br></pre></td></tr></table></figure></p>
<p>接下来，让我们创建PPTP VPN的用户，编辑<code>/etc/ppp/chap-secrets</code>。按照格式来创建用户，设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Secrets for authentication using CHAP</span></span><br><span class="line"><span class="comment"># client        server  secret                  IP addresses</span></span><br><span class="line">bibihub  pptpd  bibihubPassword   *</span><br><span class="line">vultr    pptpd  vultrPassword     *</span><br></pre></td></tr></table></figure></p>
<p>设置<code>pptpd</code>的守护进程，编辑<code>/etc/pptpd.conf</code>，把localip，remoteip的注释打开即可，注意localip并不是服务器真实的ip，remoteip，是VPN连接上后为用户分配的ip段，更详细的信息，在配置文件上有说明。这里提醒一下如果你需要链接很多设备，或者要把VPN分享给朋友，可以适当修改remoteip段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#localip 192.168.0.1&#10;#remoteip 192.168.0.234-238,192.168.0.245&#10;localip 192.168.0.1&#10;remoteip 192.168.0.234-238,192.168.0.245</span><br></pre></td></tr></table></figure></p>
<p>接下来，编辑<code>/etc/sysctl.conf</code>文件，允许IP forwarding，添加<code>net.ipv4.ip_forward=1</code>到文件结尾<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># System default settings live in /usr/lib/sysctl.d/00-system.conf.</span></span><br><span class="line"><span class="comment"># To override those settings, enter new settings here, or in an /etc/sysctl.d/&lt;name&gt;.conf file</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information, see sysctl.conf(5) and sysctl.d(5).</span></span><br><span class="line">net.ipv4.ip_forward=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>接下来配置iptables，这里提醒大家一下，centos7默认使用的防火墙是firewalld，我们先关闭掉<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure></p>
<p>添加iptables规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport <span class="number">1723</span> -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -o eth0 <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -j MASQUERADE</span><br></pre></td></tr></table></figure></p>
<p>添加转发规则后重启就会失效，Centos 6系统可以使用service iptables save保存配置，但Centos 7不支持，我们需要将配置写入rc.local文件中，开机自动设置，运行下面的命令赋予rc.loacl执行权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p>
<p>然后编辑<code>/etc/rc.d/rc.local</code>把规则加进去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="comment"># THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is highly advisable to create own systemd services or udev rules</span></span><br><span class="line"><span class="comment"># to run scripts during boot instead of using this file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In contrast to previous versions due to parallel execution during boot</span></span><br><span class="line"><span class="comment"># this script will NOT be run after all other services.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure</span></span><br><span class="line"><span class="comment"># that this script will be executed during boot.</span></span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/<span class="built_in">local</span></span><br><span class="line">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport <span class="number">1723</span> -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -o eth0 <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -j MASQUERADE</span><br></pre></td></tr></table></figure></p>
<p>启动pptpd服务，并设置为开机自动启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start pptpd.service</span><br><span class="line">systemctl <span class="built_in">enable</span> pptpd.service</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="u94FE_u63A5VPN"><a href="#u94FE_u63A5VPN" class="headerlink" title="链接VPN"></a>链接VPN</h2><hr>
<p>这里需要特别特别说明一下，像OSX，Windows，移动设备都自带PPTP链接VPN的功能，不过由于运营商的限制用（3G、4G可以用手机自带的VPN连接），即使链接上，也不能正常访问网页，这里建议，如果是PC机的话，去下载支持PPTP协议的VPN客户端，比如我用的是<a href="http://www.feingeist.io/shimo/" target="_blank" rel="external">Shimo</a>，如果你手机有流量的话，让我们链接一下试试吧</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fshimo.png" alt=""></p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fvpn-status-ok.png" alt=""></p>
<hr>
<h2 id="u6D4B_u8BD5VPN"><a href="#u6D4B_u8BD5VPN" class="headerlink" title="测试VPN"></a>测试VPN</h2><hr>
<h3 id="u8BBF_u95EE_u4E00_u4E0Bgoogle"><a href="#u8BBF_u95EE_u4E00_u4E0Bgoogle" class="headerlink" title="访问一下google"></a>访问一下<a href="/www.google.com">google</a></h3><p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fgoogle.png" alt=""></p>
<h3 id="u8BD5_u4E00_u4E0Byoutube"><a href="#u8BD5_u4E00_u4E0Byoutube" class="headerlink" title="试一下youtube"></a>试一下<a href="http://www.youtube.com/" target="_blank" rel="external">youtube</a></h3><p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fyoutube.png" alt=""></p>
<h3 id="u606D_u559C_u4F60_uFF0C_u4F60_u7684PPTP_Server_u5DF2_u7ECF_u90E8_u7F72_u5B8C_u6210_u4E86_u3002_u73B0_u5728_uFF0C_u4F60_u53EF_u4EE5_u7528_u4F60_u7684PC_uFF0C_u624B_u673A_u8FDE_u63A5_u4F60_u81EA_u5DF1_u7684PPTP_VPN_u5566_u3002"><a href="#u606D_u559C_u4F60_uFF0C_u4F60_u7684PPTP_Server_u5DF2_u7ECF_u90E8_u7F72_u5B8C_u6210_u4E86_u3002_u73B0_u5728_uFF0C_u4F60_u53EF_u4EE5_u7528_u4F60_u7684PC_uFF0C_u624B_u673A_u8FDE_u63A5_u4F60_u81EA_u5DF1_u7684PPTP_VPN_u5566_u3002" class="headerlink" title="恭喜你，你的PPTP Server已经部署完成了。现在，你可以用你的PC，手机连接你自己的PPTP VPN啦。"></a>恭喜你，你的PPTP Server已经部署完成了。现在，你可以用你的PC，手机连接你自己的PPTP VPN啦。</h3>]]></content>
    <summary type="html">
    <![CDATA[本教程出介绍了如何利用VULTR的VPS搭建一个基于PPTP协议的VPN服务器,来访问google,twitter,facebook,youtube等]]>
    
    </summary>
    
      <category term="linux" scheme="http://www.bibihub.com/tags/linux/"/>
    
      <category term="pptp" scheme="http://www.bibihub.com/tags/pptp/"/>
    
      <category term="vpn" scheme="http://www.bibihub.com/tags/vpn/"/>
    
      <category term="vps" scheme="http://www.bibihub.com/tags/vps/"/>
    
      <category term="linux" scheme="http://www.bibihub.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用nginx改变web应用的端口号]]></title>
    <link href="http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/"/>
    <id>http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/</id>
    <published>2015-10-25T06:04:40.000Z</published>
    <updated>2016-01-28T02:39:51.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>本教程介绍了如何配置Nginx作为反向代理服务器，把80端口的流量重定向到Apache Tomcat在8080端口上，或者其它的Web服务器上。</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/">利用nginx改变web应用的端口号</a></cite></footer></blockquote>
<a id="more"></a>
<p>下面是我的环境</p>
<pre><code>1. OS X EI 
2. Nginx 1.8.0
P.S 我环境里面的nginx是通过<a href="http://brew.sh/" target="_blank" rel="external">homebrew</a>安装的
</code></pre><p>在我的环境里面nginx的配置文件在下面这个位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/etc/nginx</span><br></pre></td></tr></table></figure></p>
<p>让我们先看看nginx的默认配置，nginx的默认配置文件是 nginx.conf.default 我把配置中注释掉的配置隐藏掉了，注意最后一行，意思是nginx会把servers文件夹下的配置加载进来</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="title">events</span> &#123;</span><br><span class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">http</span> &#123;</span><br><span class="line">    <span class="title">include</span>       mime.types;</span><br><span class="line">    <span class="title">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</span><br><span class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">8080</span>;</span><br><span class="line">        <span class="title">server_name</span>  localhost;</span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">root</span>   html;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="title">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="title">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">include</span> servers/*;</span><br></pre></td></tr></table></figure>
<p>我先删掉一些配置，这样8080端口就不会被nginx占用了（因为tomcat的默认端口也是8080）<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="title">events</span> &#123;</span><br><span class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">include</span> servers/*;</span><br></pre></td></tr></table></figure></p>
<p>现在你有两种选择，一是直接修改此配置文件，另一种方式是，我们在servers文件夹下创建一个新的配置文件，我喜欢后者</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/etc/nginx</span><br><span class="line">mv ./nginx.conf ./nginx.conf.bck</span><br><span class="line">cp ./nginx.conf.default nginx.conf</span><br><span class="line">touch ./servers/bibihub.server</span><br><span class="line">vi ./servers/bibihub.server</span><br></pre></td></tr></table></figure>
<p>现在让我们来编辑一下配置文件<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">http</span> &#123;</span><br><span class="line">    <span class="title">include</span>       mime.types;</span><br><span class="line">    <span class="title">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</span><br><span class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  bibihub.com;</span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-Server <span class="variable">$host</span>;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="title">proxy_pass</span> <span class="url">http://127.0.0.1:8080/</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这个配置告诉nginx重定向80端口到8080端口</p>
<p>现在让我们以<mark><strong>管理员(root)</strong></mark>到权限启动nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx</span><br><span class="line">或者</span><br><span class="line">sudo nginx <span class="operator">-s</span> reload</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[本教程介绍了如何配置Nginx作为反向代理服务器，把80端口的流量重定向到Apache Tomcat在8080端口上，或者其它的Web服务器上]]>
    
    </summary>
    
      <category term="nginx" scheme="http://www.bibihub.com/tags/nginx/"/>
    
      <category term="tomcat" scheme="http://www.bibihub.com/tags/tomcat/"/>
    
      <category term="nginx" scheme="http://www.bibihub.com/categories/nginx/"/>
    
  </entry>
  
</feed>
