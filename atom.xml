<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[BiBiHub]]></title>
  <subtitle><![CDATA[BiBiHub]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.bibihub.com/"/>
  <updated>2016-02-01T09:48:22.000Z</updated>
  <id>http://www.bibihub.com/</id>
  
  <author>
    <name><![CDATA[张晓亮]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[基于Lumen搭建一个OAUTH2认证的API框架]]></title>
    <link href="http://www.bibihub.com/php/lumen-mobile-api-oauth-2-authentication/"/>
    <id>http://www.bibihub.com/php/lumen-mobile-api-oauth-2-authentication/</id>
    <published>2016-01-29T08:55:02.000Z</published>
    <updated>2016-02-01T09:48:22.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>PHP的Lumen-Framework是为速度而生的Laravel框架，相对于Laravel来说，更适合做移动API开发，本教程会一步步的教大家，如何搭建一个OAUTH2认证的API工程，我们要在Lumen框架上，整合dingoapi与oauth2-server-laravel这两个工程</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/php/lumen-mobile-api-oauth-2-authentication/">基于PHP(Lumen)搭建一个OAUTH2认证的API框架</a></cite></footer></blockquote>
<a id="more"></a>
<h2 id="u51C6_u5907_u5DE5_u4F5C"><a href="#u51C6_u5907_u5DE5_u4F5C" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始本教程前，你需要安装PHP的运行环境，请确保你的环境满足如下条件</p>
<pre><code>1. PHP &gt;= 5.5.9
2. OpenSSL PHP Extension
3. Mbstring PHP Extension
4. Tokenizer PHP Extension
</code></pre><p>然后你需要安装<a href="http://getcomposer.org" target="_blank" rel="external">Composer</a>，确保composer在你的环境变量下，在命令行里面输入<code>composer about</code>验证一下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">localhost:~ bibihub$ composer about</span><br><span class="line">Composer - Package Management <span class="keyword">for</span> PHP</span><br><span class="line">Composer is a dependency manager tracking <span class="built_in">local</span> dependencies of your projects and libraries.</span><br><span class="line">See https://getcomposer.org/ <span class="keyword">for</span> more information.</span><br></pre></td></tr></table></figure></p>
<h2 id="u5B89_u88C5_Lumen"><a href="#u5B89_u88C5_Lumen" class="headerlink" title="安装 Lumen"></a>安装 Lumen</h2><p>本教程基于lumen5.1，请务必安装此版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project laravel/lumen --prefer-dist lumen-api-starter <span class="string">"5.1.*"</span></span><br></pre></td></tr></table></figure></p>
<p>安装完成后<code>cd</code>到<code>lumen-api-starter</code>文件夹下，复制<code>.env.example</code>重命名为<code>.env</code>进行设置，APP_KEY必须是32位的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">APP_ENV=<span class="built_in">local</span></span><br><span class="line">APP_DEBUG=<span class="literal">true</span></span><br><span class="line">APP_KEY=U&lt;CdJu~T&amp;.g/B1B1Hu8h]HfB+bb,b7Y*</span><br><span class="line"></span><br><span class="line">APP_LOCALE=en</span><br><span class="line">APP_FALLBACK_LOCALE=en</span><br><span class="line"></span><br><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=localhost</span><br><span class="line">DB_PORT=<span class="number">3306</span></span><br><span class="line">DB_DATABASE=lumen_api_starter</span><br><span class="line">DB_USERNAME=root</span><br><span class="line">DB_PASSWORD=</span><br></pre></td></tr></table></figure></p>
<p>接下来，修改<code>bootstrap\app.php</code>文件，打开这个注释，告诉lumen，我们的配置是通过<code>.evn</code>文件控制的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Dotenv::load(__DIR__.&#39;/../&#39;);&#10;Dotenv::load(__DIR__.&#39;/../&#39;);</span><br></pre></td></tr></table></figure></p>
<h2 id="u9A8C_u8BC1Lumen_u5B89_u88C5_u6210_u529F"><a href="#u9A8C_u8BC1Lumen_u5B89_u88C5_u6210_u529F" class="headerlink" title="验证Lumen安装成功"></a>验证Lumen安装成功</h2><p>在工程的根目录下，执行命令<code>--port=8000</code>是默认的参数，你可以通过此参数修改应用的端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan serve --port=<span class="number">8000</span></span><br></pre></td></tr></table></figure></p>
<p>这个命令可以方便的启动一个server，方便开发时候调试，由于本教程重点不是部署，这里就不介绍nginx，或者apache的配置方法了，当你看到下面的提示时，标示应用启动成功了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Lumen development server started on http://localhost:<span class="number">8000</span>/</span><br></pre></td></tr></table></figure></p>
<p>打开浏览器，输入<a href="http://localhost:8000/，如果你看到如下界面，恭喜你，Lumen安装成功了" target="_blank" rel="external">http://localhost:8000/，如果你看到如下界面，恭喜你，Lumen安装成功了</a></p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/php/lumen-welcome.png" alt="Lumen安装成功页面"></p>
<h2 id="u6DFB_u52A0_RESTful_API__u529F_u80FD"><a href="#u6DFB_u52A0_RESTful_API__u529F_u80FD" class="headerlink" title="添加 RESTful API 功能"></a>添加 RESTful API 功能</h2><p>这里我要集成”<a href="http://github.com/dingo/api" target="_blank" rel="external">dingoapi</a>“这个package，在github上，这个项目是这样描述的</p>
<blockquote><h3 id="This_package_provides_tools_for_the_following_2C_and_more_3A"><a href="#This_package_provides_tools_for_the_following_2C_and_more_3A" class="headerlink" title="This package provides tools for the following, and more:"></a>This package provides tools for the following, and more:</h3><p>Content Negotiation<br>Multiple Authentication Adapters<br>API Versioning<br>Rate Limiting<br>Response Transformers and Formatters<br>Error and Exception Handling<br>Internal Requests<br>API Blueprint Documentation</p>
<footer><strong>dingoapi</strong><cite><a href="https://github.com/dingo/api" target="_blank" rel="external">A RESTful API package for the Laravel and Lumen frameworks.</a></cite></footer></blockquote>
<p>首先，编辑我们工程下的<code>composer.json</code>文件，添加依赖然后执行<code>composer update</code>命令，这里我用版本为<code>0.10.0</code><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">"require": &#123;</span><br><span class="line">    "php": "&gt;=5.5.9",</span><br><span class="line">    "laravel/lumen-framework": "5.1.*",</span><br><span class="line">    "vlucas/phpdotenv": "~1.0",</span><br><span class="line">    "dingo/api": "0.10.*" ＃add dingoapi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>composer update</code>命令执行完后，我们需要做一些配置</p>
<h4 id="u7B2C_u4E00_u79CD_u914D_u7F6E_u65B9_u6CD5"><a href="#u7B2C_u4E00_u79CD_u914D_u7F6E_u65B9_u6CD5" class="headerlink" title="第一种配置方法"></a>第一种配置方法</h4><p>编辑 .env 文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">API_STANDARDS_TREE=vnd&#10;API_VENDOR=bibihub&#10;API_PREFIX=api&#10;#API_DOMAIN=api.bibihub.com&#10;API_VERSION=v1&#10;API_NAME=lumen.api.starter&#10;API_CONDITIONAL_REQUEST=true&#10;API_STRICT=false&#10;API_DEBUG=true</span><br></pre></td></tr></table></figure></p>
<h4 id="u7B2C_u4E8C_u79CD_u65B9_u5F0F"><a href="#u7B2C_u4E8C_u79CD_u65B9_u5F0F" class="headerlink" title="第二种方式"></a>第二种方式</h4><p>在我们工程的根目录下面，创建<code>config</code>文件夹，把<code>vendor\dingo\api\config\api.php</code>文件拷贝过去。然后修改<code>bootstrap\app.php</code>文件，添加下面这条语句，这样在应用启动的时候，api的相关配置就会起作用了<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;configure(<span class="string">'api'</span>);</span><br></pre></td></tr></table></figure></p>
<p>打开<code>bootstrap\app.php</code>文件，<code>register</code>需要的<code>service provider</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;register(Dingo\Api\Provider\LumenServiceProvider::class);</span><br></pre></td></tr></table></figure>
<p>打开<code>app\Http\routes.php</code>文件，创建API的Endpoints，添加一个测试的api<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$api</span> = app(<span class="string">'Dingo\Api\Routing\Router'</span>);</span><br><span class="line"><span class="variable">$api</span>-&gt;version(<span class="string">'v1'</span>, [], <span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$api</span>)</span> </span>&#123;</span><br><span class="line">    <span class="variable">$api</span>-&gt;get(<span class="string">'stats'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'stats'</span> =&gt; <span class="string">'dingoapi is ok'</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>访问<code>http://localhost:8000/api/stats</code>，看到下面信息，恭喜你，<a href="http://github.com/dingo/api" target="_blank" rel="external">dingoapi</a>已经集成成功了<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	stats: "dingoapi is ok"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="u6DFB_u52A0_OAUTH2__u529F_u80FD"><a href="#u6DFB_u52A0_OAUTH2__u529F_u80FD" class="headerlink" title="添加 OAUTH2 功能"></a>添加 OAUTH2 功能</h2><p>这里我要集成”<a href="http://github.com/lucadegasperi/oauth2-server-laravel" target="_blank" rel="external">oauth2-server-laravel</a>“这个package，在github上，这个项目是这样描述的</p>
<blockquote><p>OAuth 2.0 authorization server and resource server for the Laravel and Lumen frameworks. Standard compliant thanks to the amazing work by The League of Extraordinary Packages OAuth 2.0 authorization server and resource server.</p>
<footer><strong>oauth2-server-laravel</strong><cite><a href="http://github.com/lucadegasperi/oauth2-server-laravel" target="_blank" rel="external">An OAuth 2.0 bridge for Laravel and Lumen.</a></cite></footer></blockquote>
<p>首先，编辑我们工程下的<code>composer.json</code>文件，添加依赖然后执行<code>composer update</code>命令<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">"require": &#123;</span><br><span class="line">    "php": "&gt;=5.5.9",</span><br><span class="line">    "laravel/lumen-framework": "5.1.*",</span><br><span class="line">    "vlucas/phpdotenv": "~1.0",</span><br><span class="line">    "dingo/api": "0.10.*",</span><br><span class="line">    "lucadegasperi/oauth2-server-laravel": "^5.0" #add</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>composer update</code>命令执行完后，我们需要做一些配置<br>打开<code>bootstrap\app.php</code>文件，<code>register</code>需要的<code>service provider</code></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;register(\LucaDegasperi\OAuth2Server\Storage\FluentStorageServiceProvider::class);</span><br><span class="line"><span class="variable">$app</span>-&gt;register(\LucaDegasperi\OAuth2Server\OAuth2ServerServiceProvider::class);</span><br></pre></td></tr></table></figure>
<p>还有<code>middleware</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;middleware([</span><br><span class="line">    \LucaDegasperi\OAuth2Server\Middleware\OAuthExceptionHandlerMiddleware::class</span><br><span class="line">]);</span><br></pre></td></tr></table></figure></p>
<p>接下来是<code>route middleware</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;routeMiddleware([</span><br><span class="line">    <span class="string">'check-authorization-params'</span> =&gt; \LucaDegasperi\OAuth2Server\Middleware\CheckAuthCodeRequestMiddleware::class,</span><br><span class="line">    <span class="string">'csrf'</span> =&gt; \Laravel\Lumen\Http\Middleware\VerifyCsrfToken::class,</span><br><span class="line">    <span class="string">'oauth'</span> =&gt; \LucaDegasperi\OAuth2Server\Middleware\OAuthMiddleware::class,</span><br><span class="line">    <span class="string">'oauth-client'</span> =&gt; \LucaDegasperi\OAuth2Server\Middleware\OAuthClientOwnerMiddleware::class,</span><br><span class="line">    <span class="string">'oauth-user'</span> =&gt; \LucaDegasperi\OAuth2Server\Middleware\OAuthUserOwnerMiddleware::class,</span><br><span class="line">]);</span><br></pre></td></tr></table></figure></p>
<p>拷贝<code>vendor/lucadegasperi/oauth2-server-laravel/config/oauth2.php</code>到自己的工程<code>config/oauth2.php</code>下，用<code>$app-&gt;configure()</code>注册配置文件<code>bootstrap\app.php</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$app-&#62;configure(&#39;oauth2&#39;);</span><br></pre></td></tr></table></figure></p>
<p>编辑<code>config/oauth2.php</code>配置文件，我们用<code>password</code>的形式进行用户验证<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'grant_types'</span> =&gt; [</span><br><span class="line">    <span class="string">'password'</span> =&gt; [</span><br><span class="line">        <span class="string">'class'</span> =&gt; <span class="string">'\League\OAuth2\Server\Grant\PasswordGrant'</span>,</span><br><span class="line">        <span class="string">'callback'</span> =&gt; <span class="string">'\App\PasswordGrantVerifier@verify'</span>,</span><br><span class="line">        <span class="string">'access_token_ttl'</span> =&gt; <span class="number">3600</span></span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>创建一个class，添加<code>verify</code>方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PasswordGrantVerifier</span></span><br><span class="line"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify</span><span class="params">(<span class="variable">$username</span>, <span class="variable">$password</span>)</span></span><br><span class="line">  </span>&#123;</span><br><span class="line">      <span class="variable">$credentials</span> = [</span><br><span class="line">        <span class="string">'email'</span>    =&gt; <span class="variable">$username</span>,</span><br><span class="line">        <span class="string">'password'</span> =&gt; <span class="variable">$password</span>,</span><br><span class="line">      ];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (Auth::once(<span class="variable">$credentials</span>)) &#123;</span><br><span class="line">          <span class="keyword">return</span> Auth::user()-&gt;id;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>拷贝<code>vendor/lucadegasperi/oauth2-server-laravel/database/migrations</code>到自己工程的<code>database/migrations</code>下</p>
<h3 id="u521B_u5EFA_u4E00_u4E2AOAuth_u5BA2_u6237_u7AEF"><a href="#u521B_u5EFA_u4E00_u4E2AOAuth_u5BA2_u6237_u7AEF" class="headerlink" title="创建一个OAuth客户端"></a>创建一个OAuth客户端</h3><p>拷贝<code>vendor/laravel/lumen-framework/config/app.php</code>到<br><code>config/app.php</code>，添加<code>client_id</code>与<code>client_secret</code>的设置<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line"></span><br><span class="line">    <span class="string">'key'</span> =&gt; env(<span class="string">'APP_KEY'</span>, <span class="string">'SomeRandomString!!!'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="string">'cipher'</span> =&gt; <span class="string">'AES-256-CBC'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'locale'</span> =&gt; env(<span class="string">'APP_LOCALE'</span>, <span class="string">'en'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="string">'fallback_locale'</span> =&gt; env(<span class="string">'APP_FALLBACK_LOCALE'</span>, <span class="string">'en'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="string">'client_id'</span> =&gt; env(<span class="string">'CLIENT_ID'</span>, <span class="string">'bibihub'</span>),</span><br><span class="line"></span><br><span class="line">    <span class="string">'client_secret'</span> =&gt; env(<span class="string">'CLIENT_SECRET'</span>, <span class="string">'B1B1Hu8!'</span>),</span><br><span class="line"></span><br><span class="line">];</span><br></pre></td></tr></table></figure></p>
<p>加入到配置中<code>bootstrap\app.php</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$app-&#62;configure(&#39;api&#39;);&#10;$app-&#62;configure(&#39;app&#39;);&#10;$app-&#62;configure(&#39;oauth2&#39;);</span><br></pre></td></tr></table></figure></p>
<p>创建一个<code>seed</code>文件<code>database/seeds/OAuthSeeder.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Seeder</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OAuthSeeder</span> <span class="keyword">extends</span> <span class="title">Seeder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="variable">$config</span> = app()-&gt;make(<span class="string">'config'</span>);</span><br><span class="line"></span><br><span class="line">        app(<span class="string">'db'</span>)-&gt;table(<span class="string">"oauth_clients"</span>)-&gt;delete();</span><br><span class="line"></span><br><span class="line">        app(<span class="string">'db'</span>)-&gt;table(<span class="string">"oauth_clients"</span>)-&gt;insert([</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="variable">$config</span>-&gt;get(<span class="string">'app.client_id'</span>),</span><br><span class="line">            <span class="string">'secret'</span> =&gt; <span class="variable">$config</span>-&gt;get(<span class="string">'app.client_secret'</span>),</span><br><span class="line">            <span class="string">'name'</span> =&gt; <span class="string">'Lumen-Api-Starter'</span></span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编辑<code>database/seeds/DatabaseSeeder.php</code>文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Model::unguard();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$this</span>-&gt;call(<span class="string">'OAuthSeeder'</span>); <span class="comment">#Add</span></span><br><span class="line"></span><br><span class="line">    Model::reguard();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="u521B_u5EFAuser_u5BF9_u8C61_uFF0C_u53CA_u6570_u636E_u5E93"><a href="#u521B_u5EFAuser_u5BF9_u8C61_uFF0C_u53CA_u6570_u636E_u5E93" class="headerlink" title="创建user对象，及数据库"></a>创建user对象，及数据库</h3><p>新建<code>app\User.php</code>，创建<code>User Model</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">Authenticatable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Auth</span>\<span class="title">Passwords</span>\<span class="title">CanResetPassword</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">Authenticatable</span> <span class="title">as</span> <span class="title">AuthenticatableContract</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">CanResetPassword</span> <span class="title">as</span> <span class="title">CanResetPasswordContract</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span> <span class="keyword">implements</span> <span class="title">AuthenticatableContract</span>, <span class="title">CanResetPasswordContract</span> </span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Authenticatable</span>, <span class="title">CanResetPassword</span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * The database table used by the model.</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@var</span> string</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">'users'</span>;</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * The attributes that are mass assignable.</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@var</span> array</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [<span class="string">'name'</span>, <span class="string">'email'</span>, <span class="string">'password'</span>];</span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * The attributes excluded from the model's JSON form.</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@var</span> array</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hidden</span> = [<span class="string">'password'</span>, <span class="string">'remember_token'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>同时创建一个<code>migration</code>文件，在工程的根路径下执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:migration create_users_table</span><br></pre></td></tr></table></figure></p>
<p>命令执行完后，<code>database\migrations\yyyy_MM_dd_hhmmss_ create_users_table.php</code>文件会生成，编辑它<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Schema::create(<span class="string">'users'</span>, <span class="function"><span class="keyword">function</span><span class="params">(Blueprint <span class="variable">$table</span>)</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="variable">$table</span>-&gt;increments(<span class="string">'id'</span>);</span><br><span class="line">        <span class="variable">$table</span>-&gt;string(<span class="string">'name'</span>);</span><br><span class="line">        <span class="variable">$table</span>-&gt;string(<span class="string">'email'</span>)-&gt;unique();</span><br><span class="line">        <span class="variable">$table</span>-&gt;string(<span class="string">'password'</span>, <span class="number">60</span>);</span><br><span class="line">        <span class="variable">$table</span>-&gt;rememberToken();</span><br><span class="line">        <span class="variable">$table</span>-&gt;timestamps();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Schema::drop(<span class="string">'users'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>由于我们用了<code>Schema</code>这个<code>Facade</code>，所以我们需要修改我们的启动项<code>bootstrap\app.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $app-&gt;withFacades();</span></span><br><span class="line"><span class="comment"># $app-&gt;withEloquent();</span></span><br><span class="line"><span class="variable">$app</span>-&gt;withFacades();</span><br><span class="line"><span class="variable">$app</span>-&gt;withEloquent();</span><br></pre></td></tr></table></figure></p>
<p>创建<code>database/seeds/UserSeeder.php</code>文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Seeder</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserSeeder</span> <span class="keyword">extends</span> <span class="title">Seeder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        app(<span class="string">'db'</span>)-&gt;table(<span class="string">'users'</span>)-&gt;delete();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$user</span> = app()-&gt;make(<span class="string">'App\User'</span>);</span><br><span class="line">        <span class="variable">$hasher</span> = app()-&gt;make(<span class="string">'hash'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$user</span>-&gt;fill([</span><br><span class="line">            <span class="string">'name'</span> =&gt; <span class="string">'BiBiHub'</span>,</span><br><span class="line">            <span class="string">'email'</span> =&gt; <span class="string">'toadgg@bibihub.com'</span>,</span><br><span class="line">            <span class="string">'password'</span> =&gt; <span class="variable">$hasher</span>-&gt;make(<span class="string">'123456'</span>)</span><br><span class="line">        ]);</span><br><span class="line">        <span class="variable">$user</span>-&gt;save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编辑<code>database/seeds/DatabaseSeeder.php</code>文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    Model::unguard();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$this</span>-&gt;call(<span class="string">'OAuthSeeder'</span>); </span><br><span class="line">    <span class="variable">$this</span>-&gt;call(<span class="string">'UserSeeder'</span>);<span class="comment">#Add</span></span><br><span class="line">    </span><br><span class="line">    Model::reguard();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在工程的根路径下，执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer dump-autoload &amp;&amp; php artisan migrate &amp;&amp; php artisan db:seed</span><br></pre></td></tr></table></figure></p>
<p>这样，我们需要用的表，和基础数据就准备好了</p>
<h2 id="dingoapi__u4E0E_oauth2-server-laravel__u8FDB_u884C_u6574_u5408"><a href="#dingoapi__u4E0E_oauth2-server-laravel__u8FDB_u884C_u6574_u5408" class="headerlink" title="dingoapi 与 oauth2-server-laravel 进行整合"></a><a href="http://github.com/dingo/api" target="_blank" rel="external">dingoapi</a> 与 <a href="http://github.com/lucadegasperi/oauth2-server-laravel" target="_blank" rel="external">oauth2-server-laravel</a> 进行整合</h2><p>再次编辑<code>bootstrap\app.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">app(<span class="string">'Dingo\Api\Auth\Auth'</span>)-&gt;extend(<span class="string">'oauth'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$app</span>)</span> </span>&#123;</span><br><span class="line">    <span class="variable">$provider</span> = <span class="keyword">new</span> Dingo\Api\Auth\Provider\OAuth2(<span class="variable">$app</span>[<span class="string">'oauth2-server.authorizer'</span>]-&gt;getChecker());</span><br><span class="line"></span><br><span class="line">    <span class="variable">$provider</span>-&gt;setUserResolver(<span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$id</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Logic to return a user by their ID.</span></span><br><span class="line">        <span class="keyword">return</span> App\User::find(<span class="variable">$id</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$provider</span>-&gt;setClientResolver(<span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$id</span>)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Logic to return a client by their ID.</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$provider</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>编辑<code>app\Http\routes.php</code>文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;post(<span class="string">'oauth/access_token'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> response()-&gt;json(app(<span class="string">'oauth2-server.authorizer'</span>)-&gt;issueAccessToken());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable">$api</span> = app(<span class="string">'Dingo\Api\Routing\Router'</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$api</span>-&gt;version(<span class="string">'v1'</span>, [<span class="string">'middleware'</span> =&gt; <span class="string">'api.auth'</span>], <span class="function"><span class="keyword">function</span> <span class="params">(<span class="variable">$api</span>)</span> </span>&#123;</span><br><span class="line">    <span class="variable">$api</span>-&gt;get(<span class="string">'users/~me'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="variable">$user</span> = app(<span class="string">'Dingo\Api\Auth\Auth'</span>)-&gt;user();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$user</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h2 id="u9A8C_u8BC1_u6574_u5408_u662F_u5426_u6210_u529F"><a href="#u9A8C_u8BC1_u6574_u5408_u662F_u5426_u6210_u529F" class="headerlink" title="验证整合是否成功"></a>验证整合是否成功</h2><p>由于鉴权操作需要用到SESSION，我们再次修改<code>.env</code>文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#CACHE_DRIVER=memcached&#10;#SESSION_DRIVER=memcached&#10;CACHE_DRIVER=array&#10;SESSION_DRIVER=cookie</span><br></pre></td></tr></table></figure></p>
<p>下面我们直接访问<code>http://localhost:8000/api/users/~me</code>，返回401错误页面，意思是这个接口需要用户认证<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/php/postman-401.png" alt="用户没有授权"></p>
<p>进行用户鉴权<code>http://localhost:8000/oauth/access_token</code>，发送post请求，<code>grant_type</code>是我们之前定义的，这里用<code>password</code>的形式，请求成功后，我们可以拿到<code>access_token</code><br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/php/postman-oauth.png" alt="用户授权得到access_token"></p>
<p>再次访问<code>http://localhost:8000/api/users/~me</code>，添加<code>Authorization</code>Header，值为<code>Bearer {access_token}</code>，<code>{access_token}</code> 就是我们刚才拿到，注意<code>Bearer</code>与<code>access_token</code>之间是有一个空格到<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/php/postman-oauth-pass.png" alt="授权用户访问接口"></p>
<p>试验一下版本号是否有效，依然是访问<code>http://localhost:8000/api/users/~me</code>，再添加一个<code>Accept</code>Header，值为<code>application/vnd.bibihub.v2+json</code>，这个对应配置文件，细节请参考<a href="http://github.com/dingo/api" target="_blank" rel="external">dingoapi</a>的官方文档<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">API_STANDARDS_TREE=vnd</span><br><span class="line">API_VENDOR=bibihub</span><br></pre></td></tr></table></figure></p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/php/postman-version-unknown.png" alt="授权用户访问不存在的version接口"></p>
<hr>
<blockquote>
<p>完整的项目我已经提交到了<a href="http://github.com/toadgg/lumen-api-starter" target="_blank" rel="external">github</a>上面，<a href="http://github.com/toadgg/lumen-api-starter" target="_blank" rel="external">toadgg/lumen-api-starter</a>，有什么问题可以在上面交流</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[PHP的Lumen-Framework是为速度而生的Laravel框架，相对于Laravel来说，更适合做移动API开发，本教程会一步步的教大家，整合第三方Package，来搭建一个OAUTH2认证的API工程]]>
    
    </summary>
    
      <category term="api" scheme="http://www.bibihub.com/tags/api/"/>
    
      <category term="lumen" scheme="http://www.bibihub.com/tags/lumen/"/>
    
      <category term="oauth2" scheme="http://www.bibihub.com/tags/oauth2/"/>
    
      <category term="php" scheme="http://www.bibihub.com/tags/php/"/>
    
      <category term="php" scheme="http://www.bibihub.com/categories/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AngularJS中的ng-repeat按照时间范围过滤数据]]></title>
    <link href="http://www.bibihub.com/angularjs/how-to-filter-angular-ng-repeat-to-use-ranges-of-dates/"/>
    <id>http://www.bibihub.com/angularjs/how-to-filter-angular-ng-repeat-to-use-ranges-of-dates/</id>
    <published>2016-01-28T10:05:57.000Z</published>
    <updated>2016-01-28T11:27:53.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>本教程演示了一个AngularJS的自定义的filter在ng-repeat中的应用，实现了把数据按照时间范围来显示</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/angularjs/how-to-filter-angular-ng-repeat-to-use-ranges-of-dates/">AngularJS中的ng-repeat如何按照指定的时间范围过滤数据</a></cite></footer></blockquote>
<a id="more"></a>
<p>教程开始前，先看一下我们要处理的数据，一会我会以<code>StartDateTime</code>为条件，进行过滤（检索）<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    Title:'5天后',</span><br><span class="line">    StartDateTime: Date.now() + (86400000 * 5) // in 5 days</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    Title:'1天后',</span><br><span class="line">    StartDateTime: Date.now() + 86400000 // in a day</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    Title:'2天后',</span><br><span class="line">    StartDateTime: Date.now() + (86400000 * 2) // in 2 days</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    Title:'40天后',</span><br><span class="line">    StartDateTime: Date.now() + (86400000 * 40) //  in 40 days</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    Title:'2天前',</span><br><span class="line">    StartDateTime: Date.now() - (86400000 * 2) //  2 days ago</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>下面，我们定义一个叫<code>ranges</code>的<code>filter</code>，第一个是要过滤的字段，后两个为开始时间与结束时间<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = angular.module(<span class="string">'app'</span>, []);</span><br><span class="line">app.filter(<span class="string">'ranges'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">items, field, startDate, endDate</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> timeStart = startDate;</span><br><span class="line">    <span class="keyword">var</span> timeEnd = endDate;</span><br><span class="line">    <span class="keyword">return</span> items.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> (item[field] &gt; timeStart &amp;&amp; item[field] &lt; timeEnd);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>然后我们来调用我们的filter<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开始时间<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"date"</span> <span class="attribute">ng-model</span>=<span class="value">"startDate"</span>&gt;</span></span><br><span class="line">结束时间<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"date"</span> <span class="attribute">ng-model</span>=<span class="value">"endDate"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-repeat</span>=<span class="value">"item in eventListData | ranges:'StartDateTime':startDate:endDate"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="Live_Demo"><a href="#Live_Demo" class="headerlink" title="Live Demo"></a>Live Demo</h1><hr>
<div ng-controller="ctrl" ng-app="app"><br>  开始时间<input type="date" ng-model="startDate"><br><br>  结束时间<input type="date" ng-model="endDate"><br>  <div ng-repeat="item in eventListData | ranges:'StartDateTime':startDate:endDate | orderBy:'+StartDateTime'"><br>  <span ng-bind="item.StartDateTime | date:'yyyy-MM-dd' + '  (' + (item.Title) + ')'"></span><br>  </div><br></div>

<hr>
<h1 id="u5B8C_u6574_u7684_u4EE3_u7801_u5982_u4E0B"><a href="#u5B8C_u6574_u7684_u4EE3_u7801_u5982_u4E0B" class="headerlink" title="完整的代码如下"></a>完整的代码如下</h1><hr>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span> <span class="attribute">ng-app</span>=<span class="value">"app"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-controller</span>=<span class="value">"ctrl"</span>&gt;</span></span><br><span class="line">  开始时间<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"date"</span> <span class="attribute">ng-model</span>=<span class="value">"startDate"</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">  结束时间<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"date"</span> <span class="attribute">ng-model</span>=<span class="value">"endDate"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">ng-repeat</span>=<span class="value">"item in eventListData | ranges:'StartDateTime':startDate:endDate | orderBy:'+StartDateTime'"</span>&gt;</span>&#123;&#123;item.StartDateTime | date:'yyyy-MM-dd'&#125;&#125;(&#123;&#123;item.Title&#125;&#125;)<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.9/angular.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="keyword">var</span> app = angular.module(<span class="string">'app'</span>, []);</span><br><span class="line">  app.filter(<span class="string">'ranges'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">items, field, startDate, endDate</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> timeStart = startDate;</span><br><span class="line">      <span class="keyword">var</span> timeEnd = endDate;</span><br><span class="line">      <span class="keyword">return</span> items.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (item[field] &gt; timeStart &amp;&amp; item[field] &lt; timeEnd);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">  app.controller(<span class="string">'ctrl'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">$scope</span>)</span>&#123;</span><br><span class="line">    $scope.startDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.now());</span><br><span class="line">    $scope.endDate = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.now() + (<span class="number">86400000</span> * <span class="number">30</span>));</span><br><span class="line">    $scope.eventListData = [</span><br><span class="line">      &#123;</span><br><span class="line">        Title:<span class="string">'5天后'</span>,</span><br><span class="line">        StartDateTime: <span class="built_in">Date</span>.now() + (<span class="number">86400000</span> * <span class="number">5</span>) <span class="comment">// in 5 days</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        Title:<span class="string">'1天后'</span>,</span><br><span class="line">        StartDateTime: <span class="built_in">Date</span>.now() + <span class="number">86400000</span> <span class="comment">// in a day</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        Title:<span class="string">'2天后'</span>,</span><br><span class="line">        StartDateTime: <span class="built_in">Date</span>.now() + (<span class="number">86400000</span> * <span class="number">2</span>) <span class="comment">// in 2 days</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        Title:<span class="string">'40天后'</span>,</span><br><span class="line">        StartDateTime: <span class="built_in">Date</span>.now() + (<span class="number">86400000</span> * <span class="number">40</span>) <span class="comment">//  in 40 days</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        Title:<span class="string">'2天前'</span>,</span><br><span class="line">        StartDateTime: <span class="built_in">Date</span>.now() - (<span class="number">86400000</span> * <span class="number">2</span>) <span class="comment">//  2 days ago</span></span><br><span class="line">      &#125;</span><br><span class="line">    ];</span><br><span class="line">  &#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<script src="http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.9/angular.min.js"></script>
<script>
  var app = angular.module('app', []);
  app.filter('ranges', function(){
    return function(items, field, startDate, endDate){
      var timeStart = startDate;
      var timeEnd = endDate; // 1 day in ms
      return items.filter(function(item){
        return (item[field] > timeStart && item[field] < timeEnd);
      });
    };
  });
  app.controller('ctrl', function($scope){
    $scope.startDate = new Date(Date.now());
    $scope.endDate = new Date(Date.now() + (86400000 * 30));
    $scope.eventListData = [
      {
        Title:'5天后',
        StartDateTime: Date.now() + (86400000 * 5) // in 5 days
      },
      {
        Title:'1天后',
        StartDateTime: Date.now() + 86400000 // in a day
      },
      {
        Title:'2天后',
        StartDateTime: Date.now() + (86400000 * 2) // in 2 days
      },
      {
        Title:'40天后',
        StartDateTime: Date.now() + (86400000 * 40) //  in 40 days
      },
      {
        Title:'2天前',
        StartDateTime: Date.now() - (86400000 * 2) //  2 days ago
      }
    ];
  });
</script>

]]></content>
    <summary type="html">
    <![CDATA[本教程出自BiBiHub]]>
    
    </summary>
    
      <category term="angularjs" scheme="http://www.bibihub.com/tags/angularjs/"/>
    
      <category term="web" scheme="http://www.bibihub.com/tags/web/"/>
    
      <category term="前端" scheme="http://www.bibihub.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="angularjs" scheme="http://www.bibihub.com/categories/angularjs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何在Linux(centos7)下搭建一个VPN服务器]]></title>
    <link href="http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/"/>
    <id>http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/</id>
    <published>2016-01-27T07:29:24.000Z</published>
    <updated>2016-01-28T08:26:59.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>&emsp;&emsp;作为一个程序猿，在工作中经常会遇到各种各样的”灵异事件”。你要清楚一件事，你遇到的问题有99.99%的可能，别人同样遇到过，而且已经有了很多解决方案，现在你需要的做的，仅仅是找到它。俗话说”内事问baidu，外事问google”，程序上的事还是让我们去问google比较靠谱。<br>&emsp;&emsp;本教程出介绍了如何利用VULTR的VPS搭建一个基于PPTP协议的VPN服务器，来访问像google这样被和谐掉的网站。</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/linux/setup-pptp-vpn-server-on-centos-7/">如何在Linux(centos7)下搭建一个VPN服务器</a></cite></footer></blockquote>
<a id="more"></a>
<hr>
<h2 id="u6D77_u5916VPS"><a href="#u6D77_u5916VPS" class="headerlink" title="海外VPS"></a>海外VPS</h2><hr>
<p>本教程用的VPS是<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>，<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>一开始就上架了SSD VPS，vultr.com域名于2008年注册，2013年9月易主。<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>公司办公室位于美国纽约，是一个远程办公的团队。<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>主要卖点是：SSD硬盘、超低价格、全球14个机房、10Gb服务器带宽、3GHz CPU、性能优异。</p>
<p><a href="https://www.vultr.com/?ref=6868760" target="_blank" rel="external"><img src="https://www.vultr.com/media/728x90_03.gif" width="728" height="90"></a></p>
<p><a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>的VPS申请十分简单，上面是我的邀请链接(感谢你通过用我的邀请链接进行注册)，输入一个有效的邮箱，填写密码，提交即可，注册成功后，可以拿到$5的体验金(可以免费用一个月)</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fcreate-a-free-account.png" alt=""></p>
<p>注册成功后，需要进行邮箱验证，这里需要注意一下，<mark>在进行绑定支付渠道的时候，不要用Gift Codes，因为体验金是有使用期限的，有效期限是1个月，等我们试用快到期的时候，在去用Gift Codes。</mark>这样可以延长免费使用的时间。Gift Codes 的使用方法很简单，在Billing界面，点击Gift Code，输入进去点Apply就可以了</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fgift-code.png" alt=""></p>
<p>这里分享三个Gift Codes <strong><code>SSDVPS</code></strong> <strong><code>OWNCLOUD</code></strong> <strong><code>TGIF15</code></strong></p>
<hr>
<h2 id="u90E8_u7F72VPS"><a href="#u90E8_u7F72VPS" class="headerlink" title="部署VPS"></a>部署VPS</h2><hr>
<p>在<a href="http://www.vultr.com/?ref=6868760" target="_blank" rel="external">Vultr</a>的控制台上面，切换到Deploy下，首先选择服务器的类型，这里面选<code>COMPUTE INSTANCES</code><br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-1.png" alt=""><br>选择机房，这里建议选Tokyo,Japan，毕竟那块离我们天朝近，网络相对稳定<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-2.png" alt=""><br>操作系统选CentOS7 64bit，如果你选择其它操作系统，之后的操作你可能会遇到一些麻烦<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-3.png" alt=""><br>服务器的配置，这里选择最便宜的就好啦，1CPU，768M内存，1T流量，这个配置十分适合搭建VPN<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-4.png" alt=""><br>给服务器起个响亮的名字，提交订单<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-5.png" alt=""><br>订单提交成功后，在My Servers面板下面，会看到服务器正在初始化的菊花，耐心等待一会<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-6.png" alt=""><br>OK，服务器状态变成Running了，点击Manage按钮来管理刚才创建的服务器<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-7.png" alt=""><br>这里有我们服务器的IP地址，与root用户的密码，到这里我们的VPS就部署成功了<br><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fdeploy-vps-8.png" alt=""></p>
<hr>
<h2 id="u90E8_u7F72VPN"><a href="#u90E8_u7F72VPN" class="headerlink" title="部署VPN"></a>部署VPN</h2><hr>
<p>在确定服务器已经启动后，我们利用SSH客户端登录到服务器，由于我用的是Mac，直接用Terminal就可以了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="number">45.32</span>.<span class="number">43.250</span></span><br><span class="line">The authenticity of host <span class="string">'45.32.43.250 (45.32.43.250)'</span> can<span class="string">'t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:veASoYogUfkkw7jMMAN3kuUCPKJgy80LNSxoJy4lgno.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added '</span><span class="number">45.32</span>.<span class="number">43.250</span><span class="string">' (ECDSA) to the list of known hosts.</span><br><span class="line">root@45.32.43.250'</span>s password:</span><br><span class="line">Last login: Mon Dec  <span class="number">7</span> <span class="number">23</span>:<span class="number">42</span>:<span class="number">31</span> <span class="number">2015</span> from <span class="number">10.0</span>.<span class="number">2.2</span></span><br><span class="line">[root@vultr ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>安装需要用的包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pptpd iptables</span><br></pre></td></tr></table></figure></p>
<p>配置PPTP的设置。首先配置<code>/etc/ppp/options.pptpd</code>文件，找到网络和路由设置，我们设置ms-dns为<strong><code>8.8.8.8</code></strong>和<strong><code>8.8.4.4</code></strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Network and Routing</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If pppd is acting as a server for Microsoft Windows clients, this</span></span><br><span class="line"><span class="comment"># option allows pppd to supply one or two DNS (Domain Name Server)</span></span><br><span class="line"><span class="comment"># addresses to the clients.  The first instance of this option</span></span><br><span class="line"><span class="comment"># specifies the primary DNS address; the second instance (if given)</span></span><br><span class="line"><span class="comment"># specifies the secondary DNS address.</span></span><br><span class="line"><span class="comment">#ms-dns 10.0.0.1</span></span><br><span class="line"><span class="comment">#ms-dns 10.0.0.2</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">ms-dns <span class="number">8.8</span>.<span class="number">4.4</span></span><br></pre></td></tr></table></figure></p>
<p>接下来，让我们创建PPTP VPN的用户，编辑<code>/etc/ppp/chap-secrets</code>。按照格式来创建用户，设置密码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Secrets for authentication using CHAP</span></span><br><span class="line"><span class="comment"># client        server  secret                  IP addresses</span></span><br><span class="line">bibihub  pptpd  bibihubPassword   *</span><br><span class="line">vultr    pptpd  vultrPassword     *</span><br></pre></td></tr></table></figure></p>
<p>设置<code>pptpd</code>的守护进程，编辑<code>/etc/pptpd.conf</code>，把localip，remoteip的注释打开即可，注意localip并不是服务器真实的ip，remoteip，是VPN连接上后为用户分配的ip段，更详细的信息，在配置文件上有说明。这里提醒一下如果你需要链接很多设备，或者要把VPN分享给朋友，可以适当修改remoteip段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#localip 192.168.0.1&#10;#remoteip 192.168.0.234-238,192.168.0.245&#10;localip 192.168.0.1&#10;remoteip 192.168.0.234-238,192.168.0.245</span><br></pre></td></tr></table></figure></p>
<p>接下来，编辑<code>/etc/sysctl.conf</code>文件，允许IP forwarding，添加<code>net.ipv4.ip_forward=1</code>到文件结尾<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># System default settings live in /usr/lib/sysctl.d/00-system.conf.</span></span><br><span class="line"><span class="comment"># To override those settings, enter new settings here, or in an /etc/sysctl.d/&lt;name&gt;.conf file</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># For more information, see sysctl.conf(5) and sysctl.d(5).</span></span><br><span class="line">net.ipv4.ip_forward=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p>接下来配置iptables，这里提醒大家一下，centos7默认使用的防火墙是firewalld，我们先关闭掉<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl mask firewalld</span><br></pre></td></tr></table></figure></p>
<p>添加iptables规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport <span class="number">1723</span> -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -o eth0 <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -j MASQUERADE</span><br></pre></td></tr></table></figure></p>
<p>添加转发规则后重启就会失效，Centos 6系统可以使用service iptables save保存配置，但Centos 7不支持，我们需要将配置写入rc.local文件中，开机自动设置，运行下面的命令赋予rc.loacl执行权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure></p>
<p>然后编辑<code>/etc/rc.d/rc.local</code>把规则加进去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="comment"># THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># It is highly advisable to create own systemd services or udev rules</span></span><br><span class="line"><span class="comment"># to run scripts during boot instead of using this file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># In contrast to previous versions due to parallel execution during boot</span></span><br><span class="line"><span class="comment"># this script will NOT be run after all other services.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure</span></span><br><span class="line"><span class="comment"># that this script will be executed during boot.</span></span><br><span class="line"></span><br><span class="line">touch /var/lock/subsys/<span class="built_in">local</span></span><br><span class="line">iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport <span class="number">1723</span> -j ACCEPT</span><br><span class="line">iptables -t nat -A POSTROUTING -o eth0 <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -j MASQUERADE</span><br></pre></td></tr></table></figure></p>
<p>启动pptpd服务，并设置为开机自动启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start pptpd.service</span><br><span class="line">systemctl <span class="built_in">enable</span> pptpd.service</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="u94FE_u63A5VPN"><a href="#u94FE_u63A5VPN" class="headerlink" title="链接VPN"></a>链接VPN</h2><hr>
<p>这里需要特别特别说明一下，像OSX，Windows，移动设备都自带PPTP链接VPN的功能，不过由于运营商的限制用（3G、4G可以用手机自带的VPN连接），即使链接上，也不能正常访问网页，这里建议，如果是PC机的话，去下载支持PPTP协议的VPN客户端，比如我用的是<a href="http://www.feingeist.io/shimo/" target="_blank" rel="external">Shimo</a>，如果你手机有流量的话，让我们链接一下试试吧</p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fshimo.png" alt=""></p>
<p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fvpn-status-ok.png" alt=""></p>
<hr>
<h2 id="u6D4B_u8BD5VPN"><a href="#u6D4B_u8BD5VPN" class="headerlink" title="测试VPN"></a>测试VPN</h2><hr>
<h3 id="u8BBF_u95EE_u4E00_u4E0Bgoogle"><a href="#u8BBF_u95EE_u4E00_u4E0Bgoogle" class="headerlink" title="访问一下google"></a>访问一下<a href="/www.google.com">google</a></h3><p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fgoogle.png" alt=""></p>
<h3 id="u8BD5_u4E00_u4E0Byoutube"><a href="#u8BD5_u4E00_u4E0Byoutube" class="headerlink" title="试一下youtube"></a>试一下<a href="http://www.youtube.com/" target="_blank" rel="external">youtube</a></h3><p><img src="http://bibihub.oss-cn-hangzhou.aliyuncs.com/vultr%2Fyoutube.png" alt=""></p>
<h3 id="u606D_u559C_u4F60_uFF0C_u4F60_u7684PPTP_Server_u5DF2_u7ECF_u90E8_u7F72_u5B8C_u6210_u4E86_u3002_u73B0_u5728_uFF0C_u4F60_u53EF_u4EE5_u7528_u4F60_u7684PC_uFF0C_u624B_u673A_u8FDE_u63A5_u4F60_u81EA_u5DF1_u7684PPTP_VPN_u5566_u3002"><a href="#u606D_u559C_u4F60_uFF0C_u4F60_u7684PPTP_Server_u5DF2_u7ECF_u90E8_u7F72_u5B8C_u6210_u4E86_u3002_u73B0_u5728_uFF0C_u4F60_u53EF_u4EE5_u7528_u4F60_u7684PC_uFF0C_u624B_u673A_u8FDE_u63A5_u4F60_u81EA_u5DF1_u7684PPTP_VPN_u5566_u3002" class="headerlink" title="恭喜你，你的PPTP Server已经部署完成了。现在，你可以用你的PC，手机连接你自己的PPTP VPN啦。"></a>恭喜你，你的PPTP Server已经部署完成了。现在，你可以用你的PC，手机连接你自己的PPTP VPN啦。</h3>]]></content>
    <summary type="html">
    <![CDATA[本教程出介绍了如何利用VULTR的VPS搭建一个基于PPTP协议的VPN服务器,来访问google,twitter,facebook,youtube等]]>
    
    </summary>
    
      <category term="linux" scheme="http://www.bibihub.com/tags/linux/"/>
    
      <category term="pptp" scheme="http://www.bibihub.com/tags/pptp/"/>
    
      <category term="vpn" scheme="http://www.bibihub.com/tags/vpn/"/>
    
      <category term="vps" scheme="http://www.bibihub.com/tags/vps/"/>
    
      <category term="linux" scheme="http://www.bibihub.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用nginx改变web应用的端口号]]></title>
    <link href="http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/"/>
    <id>http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/</id>
    <published>2015-10-25T06:04:40.000Z</published>
    <updated>2016-01-28T02:39:51.000Z</updated>
    <content type="html"><![CDATA[<blockquote><p>本教程介绍了如何配置Nginx作为反向代理服务器，把80端口的流量重定向到Apache Tomcat在8080端口上，或者其它的Web服务器上。</p>
<footer><strong>BiBiHub</strong><cite><a href="http://www.bibihub.com/nginx/nginx-apache-tomcat-configuration/">利用nginx改变web应用的端口号</a></cite></footer></blockquote>
<a id="more"></a>
<p>下面是我的环境</p>
<pre><code>1. OS X EI 
2. Nginx 1.8.0
P.S 我环境里面的nginx是通过<a href="http://brew.sh/" target="_blank" rel="external">homebrew</a>安装的
</code></pre><p>在我的环境里面nginx的配置文件在下面这个位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/etc/nginx</span><br></pre></td></tr></table></figure></p>
<p>让我们先看看nginx的默认配置，nginx的默认配置文件是 nginx.conf.default 我把配置中注释掉的配置隐藏掉了，注意最后一行，意思是nginx会把servers文件夹下的配置加载进来</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="title">events</span> &#123;</span><br><span class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">http</span> &#123;</span><br><span class="line">    <span class="title">include</span>       mime.types;</span><br><span class="line">    <span class="title">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</span><br><span class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">8080</span>;</span><br><span class="line">        <span class="title">server_name</span>  localhost;</span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">root</span>   html;</span><br><span class="line">            <span class="title">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="title">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="title">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">include</span> servers/*;</span><br></pre></td></tr></table></figure>
<p>我先删掉一些配置，这样8080端口就不会被nginx占用了（因为tomcat的默认端口也是8080）<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"><span class="title">events</span> &#123;</span><br><span class="line">    <span class="title">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">include</span> servers/*;</span><br></pre></td></tr></table></figure></p>
<p>现在你有两种选择，一是直接修改此配置文件，另一种方式是，我们在servers文件夹下创建一个新的配置文件，我喜欢后者</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/etc/nginx</span><br><span class="line">mv ./nginx.conf ./nginx.conf.bck</span><br><span class="line">cp ./nginx.conf.default nginx.conf</span><br><span class="line">touch ./servers/bibihub.server</span><br><span class="line">vi ./servers/bibihub.server</span><br></pre></td></tr></table></figure>
<p>现在让我们来编辑一下配置文件<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">http</span> &#123;</span><br><span class="line">    <span class="title">include</span>       mime.types;</span><br><span class="line">    <span class="title">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="title">sendfile</span>        <span class="built_in">on</span>;</span><br><span class="line">    <span class="title">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line">    <span class="title">server</span> &#123;</span><br><span class="line">        <span class="title">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="title">server_name</span>  bibihub.com;</span><br><span class="line">        <span class="title">location</span> / &#123;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-Server <span class="variable">$host</span>;</span><br><span class="line">            <span class="title">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="title">proxy_pass</span> <span class="url">http://127.0.0.1:8080/</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这个配置告诉nginx重定向80端口到8080端口</p>
<p>现在让我们以<mark><strong>管理员(root)</strong></mark>到权限启动nginx<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx</span><br><span class="line">或者</span><br><span class="line">sudo nginx <span class="operator">-s</span> reload</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[本教程介绍了如何配置Nginx作为反向代理服务器，把80端口的流量重定向到Apache Tomcat在8080端口上，或者其它的Web服务器上]]>
    
    </summary>
    
      <category term="nginx" scheme="http://www.bibihub.com/tags/nginx/"/>
    
      <category term="tomcat" scheme="http://www.bibihub.com/tags/tomcat/"/>
    
      <category term="nginx" scheme="http://www.bibihub.com/categories/nginx/"/>
    
  </entry>
  
</feed>
